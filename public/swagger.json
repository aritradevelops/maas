{
  "openapi": "3.0.0",
  "info": {
    "title": "Meow as a Service (MaaS) API documentation",
    "version": "1.0.0",
    "description": "An API to manage cats or `meows` as we refer it, including listing, viewing, creating, updating, and deleting cats."
  },
  "servers": [
    {
      "url": "https://maas-alpha.vercel.app/",
      "description": "Development Server"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "Cat": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "breed": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "personality": {
            "$ref": "#/components/schemas/Personality"
          },
          "owner_id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Personality": {
        "type": "string",
        "enum": [
          "Playful",
          "Calm",
          "Bold",
          "Affectionate",
          "Energetic",
          "Gentle",
          "Curious",
          "Confident",
          "Friendly",
          "Mysterious"
        ]
      }
    },
    "responses": {
      "Ok": {
        "description": "Operation successful",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                },
                "data": {
                  "$ref": "#/components/schemas/Cat"
                }
              }
            }
          }
        }
      },
      "Created": {
        "description": "Resource created successfully",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                },
                "data": {
                  "$ref": "#/components/schemas/Cat"
                }
              }
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Unauthorized request"
      },
      "Forbidden": {
        "description": "Forbidden: insufficient permissions"
      },
      "NotFound": {
        "description": "Resource not found"
      }
    }
  },
  "paths": {
    "/api/meows": {
      "get": {
        "summary": "List Meows",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Search query for cat names"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 10
            }
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "Filtering options"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "created_at"
            }
          },
          {
            "name": "order",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            }
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "name,id,breed"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of meows",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Cat"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "post": {
        "summary": "Create a Meow",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "breed": {
                    "type": "string"
                  },
                  "image": {
                    "type": "string"
                  },
                  "personality": {
                    "$ref": "#/components/schemas/Personality"
                  }
                },
                "required": [
                  "name",
                  "breed",
                  "personality"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/api/meows/{id}": {
      "get": {
        "summary": "Get a Meow by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Ok"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "put": {
        "summary": "Update a Meow by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "breed": {
                    "type": "string"
                  },
                  "image": {
                    "type": "string"
                  },
                  "personality": {
                    "$ref": "#/components/schemas/Personality"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Ok"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "delete": {
        "summary": "Delete a Meow by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Ok"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    }
  }
}